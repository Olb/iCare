/*This file is generated by perlxml.pl. DO NOT MODIFY */

#import "Group1ViewController.h"
#import "BBUtil.h"
#import "FormSection.h"
#import "FormElement.h"
#import "BBCheckBox.h"
#import "BooleanFormElement.h"
#import "StringListElement.h"
#import "TextElement.h"
#import "StringArrayTableAdapter.h"

#import "ElementListFormElement.h"

#import "FormElementTableAdapter.h"

#import "FormElementTableCellFactory.h"

#import "AntibioticFormElement.h"

#import "MedicationFormElement.h"

#import "BBData.h"

#import "BBAutoCompleteTextField.h"


@interface Group1ViewController () <UITextFieldDelegate>
@property (weak, nonatomic) IBOutlet BBCheckBox *anesthesiaStartDelayBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *caseCanceledBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *unplannedAdmissionBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *preInductionBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *postInductionBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *wrongSiteBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *mortalityBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *myocardialInfarctionBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *significantBPChangeBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *dysrhythmiaBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *cardiacArrestBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *hypertensionBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *hypotensionBBCheckBox;
@end

@implementation Group1ViewController
NSString *const GROUP1_SECTION_TITLE = @"Group1SectionKey";
static NSString *const ANESTHESIA_START_DELAY_KEY = @"AnesthesiaStartDelayKey";
static NSString *const CASE_CANCELED_KEY = @"CaseCanceledKey";
static NSString *const UNPLANNED_ADMISSION_KEY = @"UnplannedAdmissionKey";
static NSString *const PRE_INDUCTION_KEY = @"PreInductionKey";
static NSString *const POST_INDUCTION_KEY = @"PostInductionKey";
static NSString *const WRONG_SITE_KEY = @"WrongSiteKey";
static NSString *const MORTALITY_KEY = @"MortalityKey";
static NSString *const MYOCARDIAL_INFARCTION_KEY = @"MyocardialInfarctionKey";
static NSString *const SIGNIFICANTBPChange_KEY = @"SignificantBPChangeKey";
static NSString *const DYSRHYTHMIA_KEY = @"DysrhythmiaKey";
static NSString *const CARDIAC_ARREST_KEY = @"CardiacArrestKey";
static NSString *const HYPERTENSION_KEY = @"HypertensionKey";
static NSString *const HYPOTENSION_KEY = @"HypotensionKey";

- (void)viewDidLoad
{
	 [super viewDidLoad];
	 if (_section) {
		 [self validateSection:_section];
		 NSArray *elements = [_section.elements array];

		 for (FormElement *element in elements) {
			 if ([element.key isEqualToString:ANESTHESIA_START_DELAY_KEY]){
				 [self.anesthesiaStartDelayBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:CASE_CANCELED_KEY]){
				 [self.caseCanceledBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:UNPLANNED_ADMISSION_KEY]){
				 [self.unplannedAdmissionBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:PRE_INDUCTION_KEY]){
				 [self.preInductionBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:POST_INDUCTION_KEY]){
				 [self.postInductionBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:WRONG_SITE_KEY]){
				 [self.wrongSiteBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:MORTALITY_KEY]){
				 [self.mortalityBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:MYOCARDIAL_INFARCTION_KEY]){
				 [self.myocardialInfarctionBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:SIGNIFICANTBPChange_KEY]){
				 [self.significantBPChangeBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:DYSRHYTHMIA_KEY]){
				 [self.dysrhythmiaBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:CARDIAC_ARREST_KEY]){
				 [self.cardiacArrestBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:HYPERTENSION_KEY]){
				 [self.hypertensionBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:HYPOTENSION_KEY]){
				 [self.hypotensionBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
		 }
	 }
}


-(void)addDatePicker: (UITextField*)textField withSelector: (SEL)selector {
	 UIDatePicker *datePicker = [[UIDatePicker alloc] init];
	 datePicker.datePickerMode = UIDatePickerModeDate;
	 [textField setInputView:datePicker];
	 UIToolbar *myToolbar = [[UIToolbar alloc] initWithFrame: CGRectMake(0,0,340,44)];
	 UIBarButtonItem *doneButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:selector];
	 [myToolbar setItems:[NSArray arrayWithObject: doneButton] animated:NO];
	 textField.inputAccessoryView = myToolbar;
}

-(void)validateSection:(FormSection*)section
{
	 NSAssert([section getElementForKey:ANESTHESIA_START_DELAY_KEY]!= nil, @"AnesthesiaStartDelay is nil");
	 NSAssert([section getElementForKey:CASE_CANCELED_KEY]!= nil, @"CaseCanceled is nil");
	 NSAssert([section getElementForKey:UNPLANNED_ADMISSION_KEY]!= nil, @"UnplannedAdmission is nil");
	 NSAssert([section getElementForKey:PRE_INDUCTION_KEY]!= nil, @"PreInduction is nil");
	 NSAssert([section getElementForKey:POST_INDUCTION_KEY]!= nil, @"PostInduction is nil");
	 NSAssert([section getElementForKey:WRONG_SITE_KEY]!= nil, @"WrongSite is nil");
	 NSAssert([section getElementForKey:MORTALITY_KEY]!= nil, @"Mortality is nil");
	 NSAssert([section getElementForKey:MYOCARDIAL_INFARCTION_KEY]!= nil, @"MyocardialInfarction is nil");
	 NSAssert([section getElementForKey:SIGNIFICANTBPChange_KEY]!= nil, @"SignificantBPChange is nil");
	 NSAssert([section getElementForKey:DYSRHYTHMIA_KEY]!= nil, @"Dysrhythmia is nil");
	 NSAssert([section getElementForKey:CARDIAC_ARREST_KEY]!= nil, @"CardiacArrest is nil");
	 NSAssert([section getElementForKey:HYPERTENSION_KEY]!= nil, @"Hypertension is nil");
	 NSAssert([section getElementForKey:HYPOTENSION_KEY]!= nil, @"Hypotension is nil");
	 
}

-(BOOL)validateData:(NSString**)errMsg
{
	 return true; 
}

- (IBAction)accept:(id)sender {
	 NSString* errMsg;
	 if ( ! [self validateData: &errMsg] ){
		 [BBUtil showAlertWithMessage:errMsg];
		 return;
	 }
	 if ( !self.section ){
		 self.section = (FormSection*)[BBUtil newCoreDataObjectForEntityName:@"FormSection"];
		 self.section.title = GROUP1_SECTION_TITLE;
	 }
	 
	 BooleanFormElement *anesthesiaStartDelay = (BooleanFormElement*)[_section getElementForKey:ANESTHESIA_START_DELAY_KEY];
	 if (!anesthesiaStartDelay) {
		 anesthesiaStartDelay = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 anesthesiaStartDelay.key = ANESTHESIA_START_DELAY_KEY;
		 [_section addElementsObject:anesthesiaStartDelay];
	 }

	 anesthesiaStartDelay.value = [NSNumber numberWithBool:self.anesthesiaStartDelayBBCheckBox.isSelected];
	 
	 BooleanFormElement *caseCanceled = (BooleanFormElement*)[_section getElementForKey:CASE_CANCELED_KEY];
	 if (!caseCanceled) {
		 caseCanceled = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 caseCanceled.key = CASE_CANCELED_KEY;
		 [_section addElementsObject:caseCanceled];
	 }

	 caseCanceled.value = [NSNumber numberWithBool:self.caseCanceledBBCheckBox.isSelected];
	 
	 BooleanFormElement *unplannedAdmission = (BooleanFormElement*)[_section getElementForKey:UNPLANNED_ADMISSION_KEY];
	 if (!unplannedAdmission) {
		 unplannedAdmission = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 unplannedAdmission.key = UNPLANNED_ADMISSION_KEY;
		 [_section addElementsObject:unplannedAdmission];
	 }

	 unplannedAdmission.value = [NSNumber numberWithBool:self.unplannedAdmissionBBCheckBox.isSelected];
	 
	 BooleanFormElement *preInduction = (BooleanFormElement*)[_section getElementForKey:PRE_INDUCTION_KEY];
	 if (!preInduction) {
		 preInduction = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 preInduction.key = PRE_INDUCTION_KEY;
		 [_section addElementsObject:preInduction];
	 }

	 preInduction.value = [NSNumber numberWithBool:self.preInductionBBCheckBox.isSelected];
	 
	 BooleanFormElement *postInduction = (BooleanFormElement*)[_section getElementForKey:POST_INDUCTION_KEY];
	 if (!postInduction) {
		 postInduction = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 postInduction.key = POST_INDUCTION_KEY;
		 [_section addElementsObject:postInduction];
	 }

	 postInduction.value = [NSNumber numberWithBool:self.postInductionBBCheckBox.isSelected];
	 
	 BooleanFormElement *wrongSite = (BooleanFormElement*)[_section getElementForKey:WRONG_SITE_KEY];
	 if (!wrongSite) {
		 wrongSite = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 wrongSite.key = WRONG_SITE_KEY;
		 [_section addElementsObject:wrongSite];
	 }

	 wrongSite.value = [NSNumber numberWithBool:self.wrongSiteBBCheckBox.isSelected];
	 
	 BooleanFormElement *mortality = (BooleanFormElement*)[_section getElementForKey:MORTALITY_KEY];
	 if (!mortality) {
		 mortality = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 mortality.key = MORTALITY_KEY;
		 [_section addElementsObject:mortality];
	 }

	 mortality.value = [NSNumber numberWithBool:self.mortalityBBCheckBox.isSelected];
	 
	 BooleanFormElement *myocardialInfarction = (BooleanFormElement*)[_section getElementForKey:MYOCARDIAL_INFARCTION_KEY];
	 if (!myocardialInfarction) {
		 myocardialInfarction = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 myocardialInfarction.key = MYOCARDIAL_INFARCTION_KEY;
		 [_section addElementsObject:myocardialInfarction];
	 }

	 myocardialInfarction.value = [NSNumber numberWithBool:self.myocardialInfarctionBBCheckBox.isSelected];
	 
	 BooleanFormElement *significantBPChange = (BooleanFormElement*)[_section getElementForKey:SIGNIFICANTBPChange_KEY];
	 if (!significantBPChange) {
		 significantBPChange = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 significantBPChange.key = SIGNIFICANTBPChange_KEY;
		 [_section addElementsObject:significantBPChange];
	 }

	 significantBPChange.value = [NSNumber numberWithBool:self.significantBPChangeBBCheckBox.isSelected];
	 
	 BooleanFormElement *dysrhythmia = (BooleanFormElement*)[_section getElementForKey:DYSRHYTHMIA_KEY];
	 if (!dysrhythmia) {
		 dysrhythmia = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 dysrhythmia.key = DYSRHYTHMIA_KEY;
		 [_section addElementsObject:dysrhythmia];
	 }

	 dysrhythmia.value = [NSNumber numberWithBool:self.dysrhythmiaBBCheckBox.isSelected];
	 
	 BooleanFormElement *cardiacArrest = (BooleanFormElement*)[_section getElementForKey:CARDIAC_ARREST_KEY];
	 if (!cardiacArrest) {
		 cardiacArrest = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 cardiacArrest.key = CARDIAC_ARREST_KEY;
		 [_section addElementsObject:cardiacArrest];
	 }

	 cardiacArrest.value = [NSNumber numberWithBool:self.cardiacArrestBBCheckBox.isSelected];
	 
	 BooleanFormElement *hypertension = (BooleanFormElement*)[_section getElementForKey:HYPERTENSION_KEY];
	 if (!hypertension) {
		 hypertension = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 hypertension.key = HYPERTENSION_KEY;
		 [_section addElementsObject:hypertension];
	 }

	 hypertension.value = [NSNumber numberWithBool:self.hypertensionBBCheckBox.isSelected];
	 
	 BooleanFormElement *hypotension = (BooleanFormElement*)[_section getElementForKey:HYPOTENSION_KEY];
	 if (!hypotension) {
		 hypotension = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 hypotension.key = HYPOTENSION_KEY;
		 [_section addElementsObject:hypotension];
	 }

	 hypotension.value = [NSNumber numberWithBool:self.hypotensionBBCheckBox.isSelected];
	 
	 [self.delegate sectionCreated:self.section];
	 [self dismissViewControllerAnimated:YES completion:nil];
}

- (IBAction)changeMedUnit:(UIButton*)sender {
	 if ([sender.titleLabel.text isEqualToString: @"cc"]) { 
		 [sender setTitle:@"mcg" forState:UIControlStateNormal];
	 } else if ([sender.titleLabel.text isEqualToString: @"mcg"]) {
		 [sender setTitle:@"mg" forState:UIControlStateNormal];
	 } else if ([sender.titleLabel.text isEqualToString: @"mg"]) {
		 [sender setTitle:@"G" forState:UIControlStateNormal];
	 } else if ([sender.titleLabel.text isEqualToString: @"G"]) {
		 [sender setTitle:@"none" forState:UIControlStateNormal];
	 } else if ([sender.titleLabel.text isEqualToString: @"none"]) {
		 [sender setTitle:@"cc" forState:UIControlStateNormal];
	 } 
}

- (BOOL)disablesAutomaticKeyboardDismissal {
	 return NO;
}

- (IBAction)dismiss:(id)sender {
	 [BBUtil refreshManagedObject:_section];
	 [self dismissViewControllerAnimated:YES completion:nil];
}

+(NSString*)sectionTitle
{
	 return GROUP1_SECTION_TITLE;
}
-(void)radioGroup1:(BBCheckBox*)sender {
	 BOOL selected = sender.selected;
	 sender.selected = selected;
}
@end