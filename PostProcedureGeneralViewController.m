/*This file is generated by perlxml.pl. DO NOT MODIFY */

#import "PostProcedureGeneralViewController.h"
#import "BBUtil.h"
#import "FormSection.h"
#import "FormElement.h"
#import "BBCheckBox.h"
#import "BooleanFormElement.h"
#import "StringListElement.h"
#import "TextElement.h"
#import "StringArrayTableAdapter.h"

#import "ElementListFormElement.h"

#import "FormElementTableAdapter.h"

#import "FormElementTableCellFactory.h"

#import "AntibioticFormElement.h"

#import "MedicationFormElement.h"


@interface PostProcedureGeneralViewController () <UITextFieldDelegate>
@property (weak, nonatomic) IBOutlet BBCheckBox *stableBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *dentitionIntactBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *otherBoolBBCheckBox;
@property (weak, nonatomic) IBOutlet UITextField *otherTextUITextField;
@property (weak, nonatomic) IBOutlet UITextField *bpSystolicUITextField;
@property (weak, nonatomic) IBOutlet UITextField *bpDiastolicUITextField;
@property (weak, nonatomic) IBOutlet UITextField *heartRateUITextField;
@property (weak, nonatomic) IBOutlet UITextField *respiratoryRateUITextField;
@property (weak, nonatomic) IBOutlet UITextField *temperatureUITextField;
@property (weak, nonatomic) IBOutlet UITextField *spO2UITextField;
@end

@implementation PostProcedureGeneralViewController
NSString *const POST_PROCEDURE_GENERAL_SECTION_TITLE = @"PostProcedureGeneralSectionKey";
static NSString *const STABLE_KEY = @"StableKey";
static NSString *const DENTITION_INTACT_KEY = @"DentitionIntactKey";
static NSString *const OTHER_BOOL_KEY = @"OtherBoolKey";
static NSString *const OTHER_TEXT_KEY = @"OtherTextKey";
static NSString *const BP_SYSTOLIC_KEY = @"BpSystolicKey";
static NSString *const BP_DIASTOLIC_KEY = @"BpDiastolicKey";
static NSString *const HEART_RATE_KEY = @"HeartRateKey";
static NSString *const RESPIRATORY_RATE_KEY = @"RespiratoryRateKey";
static NSString *const TEMPERATURE_KEY = @"TemperatureKey";
static NSString *const SPO2_KEY = @"SpO2Key";

- (void)viewDidLoad
{
	 [super viewDidLoad];
	 if (_section) {
		 [self validateSection:_section];
		 NSArray *elements = [_section.elements array];

		 for (FormElement *element in elements) {
			 if ([element.key isEqualToString:STABLE_KEY]){
				 [self.stableBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:DENTITION_INTACT_KEY]){
				 [self.dentitionIntactBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:OTHER_BOOL_KEY]){
				 [self.otherBoolBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:OTHER_TEXT_KEY]){
				 [self.otherTextUITextField setText:((TextElement*)element).value];
			 }
			 if ([element.key isEqualToString:BP_SYSTOLIC_KEY]){
				 [self.bpSystolicUITextField setText:((TextElement*)element).value];
			 }
			 if ([element.key isEqualToString:BP_DIASTOLIC_KEY]){
				 [self.bpDiastolicUITextField setText:((TextElement*)element).value];
			 }
			 if ([element.key isEqualToString:HEART_RATE_KEY]){
				 [self.heartRateUITextField setText:((TextElement*)element).value];
			 }
			 if ([element.key isEqualToString:RESPIRATORY_RATE_KEY]){
				 [self.respiratoryRateUITextField setText:((TextElement*)element).value];
			 }
			 if ([element.key isEqualToString:TEMPERATURE_KEY]){
				 [self.temperatureUITextField setText:((TextElement*)element).value];
			 }
			 if ([element.key isEqualToString:SPO2_KEY]){
				 [self.spO2UITextField setText:((TextElement*)element).value];
			 }
		 }
	 }
}


-(void)addDatePicker: (UITextField*)textField withSelector: (SEL)selector {
	 UIDatePicker *datePicker = [[UIDatePicker alloc] init];
	 datePicker.datePickerMode = UIDatePickerModeDate;
	 [textField setInputView:datePicker];
	 UIToolbar *myToolbar = [[UIToolbar alloc] initWithFrame: CGRectMake(0,0,340,44)];
	 UIBarButtonItem *doneButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:selector];
	 [myToolbar setItems:[NSArray arrayWithObject: doneButton] animated:NO];
	 textField.inputAccessoryView = myToolbar;
}

-(void)validateSection:(FormSection*)section
{
	 NSAssert([section getElementForKey:STABLE_KEY]!= nil, @"Stable is nil");
	 NSAssert([section getElementForKey:DENTITION_INTACT_KEY]!= nil, @"DentitionIntact is nil");
	 NSAssert([section getElementForKey:OTHER_BOOL_KEY]!= nil, @"OtherBool is nil");
	 NSAssert([section getElementForKey:OTHER_TEXT_KEY]!= nil, @"OtherText is nil");
	 NSAssert([section getElementForKey:BP_SYSTOLIC_KEY]!= nil, @"BpSystolic is nil");
	 NSAssert([section getElementForKey:BP_DIASTOLIC_KEY]!= nil, @"BpDiastolic is nil");
	 NSAssert([section getElementForKey:HEART_RATE_KEY]!= nil, @"HeartRate is nil");
	 NSAssert([section getElementForKey:RESPIRATORY_RATE_KEY]!= nil, @"RespiratoryRate is nil");
	 NSAssert([section getElementForKey:TEMPERATURE_KEY]!= nil, @"Temperature is nil");
	 NSAssert([section getElementForKey:SPO2_KEY]!= nil, @"SpO2 is nil");
	 
}

-(BOOL)validateData:(NSString**)errMsg
{
	 if( ![self.bpSystolicUITextField.text isEqualToString:@""] ){ 
		 if( !(![self.bpDiastolicUITextField.text isEqualToString:@""]) ){ 
			 *errMsg = @"BpDiastolic must be not empty when BpSystolic is not empty"; 
			 return false; 
		 }
	 }
	 if( ![self.bpDiastolicUITextField.text isEqualToString:@""] ){ 
		 if( !(![self.bpSystolicUITextField.text isEqualToString:@""]) ){ 
			 *errMsg = @"BpSystolic must be not empty when BpDiastolic is not empty"; 
			 return false; 
		 }
	 }
	 if( self.otherBoolBBCheckBox.selected ){ 
		 if( !(![self.otherTextUITextField.text isEqualToString:@""]) ){ 
			 *errMsg = @"OtherText must be not empty when OtherBool is selected"; 
			 return false; 
		 }
	 }
	 return true; 
}

- (IBAction)accept:(id)sender {
	 NSString* errMsg;
	 if ( ! [self validateData: &errMsg] ){
		 [BBUtil showAlertWithMessage:errMsg];
		 return;
	 }
	 if ( !self.section ){
		 self.section = (FormSection*)[BBUtil newCoreDataObjectForEntityName:@"FormSection"];
		 self.section.title = POST_PROCEDURE_GENERAL_SECTION_TITLE;
	 }
	 
	 BooleanFormElement *stable = (BooleanFormElement*)[_section getElementForKey:STABLE_KEY];
	 if (!stable) {
		 stable = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 stable.key = STABLE_KEY;
		 [_section addElementsObject:stable];
	 }

	 stable.value = [NSNumber numberWithBool:self.stableBBCheckBox.isSelected];
	 
	 BooleanFormElement *dentitionIntact = (BooleanFormElement*)[_section getElementForKey:DENTITION_INTACT_KEY];
	 if (!dentitionIntact) {
		 dentitionIntact = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 dentitionIntact.key = DENTITION_INTACT_KEY;
		 [_section addElementsObject:dentitionIntact];
	 }

	 dentitionIntact.value = [NSNumber numberWithBool:self.dentitionIntactBBCheckBox.isSelected];
	 
	 BooleanFormElement *otherBool = (BooleanFormElement*)[_section getElementForKey:OTHER_BOOL_KEY];
	 if (!otherBool) {
		 otherBool = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 otherBool.key = OTHER_BOOL_KEY;
		 [_section addElementsObject:otherBool];
	 }

	 otherBool.value = [NSNumber numberWithBool:self.otherBoolBBCheckBox.isSelected];
	 
	 TextElement *otherText = (TextElement*)[_section getElementForKey:OTHER_TEXT_KEY];
	 if (!otherText) {
		 otherText = (TextElement*)[BBUtil newCoreDataObjectForEntityName:@"TextElement"];
		 otherText.key = OTHER_TEXT_KEY;
		 [_section addElementsObject:otherText];
	 }

	 otherText.value = self.otherTextUITextField.text;
	 
	 TextElement *bpSystolic = (TextElement*)[_section getElementForKey:BP_SYSTOLIC_KEY];
	 if (!bpSystolic) {
		 bpSystolic = (TextElement*)[BBUtil newCoreDataObjectForEntityName:@"TextElement"];
		 bpSystolic.key = BP_SYSTOLIC_KEY;
		 [_section addElementsObject:bpSystolic];
	 }

	 bpSystolic.value = self.bpSystolicUITextField.text;
	 
	 TextElement *bpDiastolic = (TextElement*)[_section getElementForKey:BP_DIASTOLIC_KEY];
	 if (!bpDiastolic) {
		 bpDiastolic = (TextElement*)[BBUtil newCoreDataObjectForEntityName:@"TextElement"];
		 bpDiastolic.key = BP_DIASTOLIC_KEY;
		 [_section addElementsObject:bpDiastolic];
	 }

	 bpDiastolic.value = self.bpDiastolicUITextField.text;
	 
	 TextElement *heartRate = (TextElement*)[_section getElementForKey:HEART_RATE_KEY];
	 if (!heartRate) {
		 heartRate = (TextElement*)[BBUtil newCoreDataObjectForEntityName:@"TextElement"];
		 heartRate.key = HEART_RATE_KEY;
		 [_section addElementsObject:heartRate];
	 }

	 heartRate.value = self.heartRateUITextField.text;
	 
	 TextElement *respiratoryRate = (TextElement*)[_section getElementForKey:RESPIRATORY_RATE_KEY];
	 if (!respiratoryRate) {
		 respiratoryRate = (TextElement*)[BBUtil newCoreDataObjectForEntityName:@"TextElement"];
		 respiratoryRate.key = RESPIRATORY_RATE_KEY;
		 [_section addElementsObject:respiratoryRate];
	 }

	 respiratoryRate.value = self.respiratoryRateUITextField.text;
	 
	 TextElement *temperature = (TextElement*)[_section getElementForKey:TEMPERATURE_KEY];
	 if (!temperature) {
		 temperature = (TextElement*)[BBUtil newCoreDataObjectForEntityName:@"TextElement"];
		 temperature.key = TEMPERATURE_KEY;
		 [_section addElementsObject:temperature];
	 }

	 temperature.value = self.temperatureUITextField.text;
	 
	 TextElement *spO2 = (TextElement*)[_section getElementForKey:SPO2_KEY];
	 if (!spO2) {
		 spO2 = (TextElement*)[BBUtil newCoreDataObjectForEntityName:@"TextElement"];
		 spO2.key = SPO2_KEY;
		 [_section addElementsObject:spO2];
	 }

	 spO2.value = self.spO2UITextField.text;
	 
	 [self.delegate sectionCreated:self.section];
	 [self dismissViewControllerAnimated:YES completion:nil];
}

- (IBAction)changeMedUnit:(UIButton*)sender {
	 if ([sender.titleLabel.text isEqualToString: @"cc"]) { 
		 sender.titleLabel.text = @"mcg";
	 } else if ([sender.titleLabel.text isEqualToString: @"mcg"]) {
		 sender.titleLabel.text = @"mg";
	 } else if ([sender.titleLabel.text isEqualToString: @"mg"]) {
		 sender.titleLabel.text = @"g";
	 } else if ([sender.titleLabel.text isEqualToString: @"g"]) {
		 sender.titleLabel.text = @"cc";
	 } 
}

- (BOOL)disablesAutomaticKeyboardDismissal {
	 return NO;
}

- (IBAction)dismiss:(id)sender {
	 [BBUtil refreshManagedObject:_section];
	 [self dismissViewControllerAnimated:YES completion:nil];
}

+(NSString*)sectionTitle
{
	 return POST_PROCEDURE_GENERAL_SECTION_TITLE;
}
-(void)radioGroup1:(BBCheckBox*)sender {
	 BOOL selected = sender.selected;
	 sender.selected = selected;
}
@end