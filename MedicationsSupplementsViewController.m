/*This file is generated by perlxml.pl. DO NOT MODIFY */

#import "MedicationsSupplementsViewController.h"
#import "BBUtil.h"
#import "FormSection.h"
#import "FormElement.h"
#import "BBCheckBox.h"
#import "BooleanFormElement.h"
#import "StringListElement.h"
#import "TextElement.h"
#import "StringArrayTableAdapter.h"

#import "ElementListFormElement.h"

#import "FormElementTableAdapter.h"

#import "FormElementTableCellFactory.h"

#import "AntibioticFormElement.h"

#import "MedicationFormElement.h"


@interface MedicationsSupplementsViewController () <UITextFieldDelegate>
@property (weak, nonatomic) IBOutlet BBCheckBox *betaBlockerBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *takenDayOfBBCheckBox;
@property (weak, nonatomic) IBOutlet UITableView *medsSupplementsTable;
@property (strong, nonatomic) FormElementTableAdapter *medsSupplementsTableAdapter;
@property (weak, nonatomic) IBOutlet UITextField *medsSupplementsNameTextField;
@property (weak, nonatomic) IBOutlet UITextField *medsSupplementsDoseTextField;
@property (weak, nonatomic) IBOutlet UIButton *medsSupplementsDoseUnitButton;
@property (weak, nonatomic) IBOutlet UITextView *notesUITextView;
@end

@implementation MedicationsSupplementsViewController
NSString *const MEDICATIONS_SUPPLEMENTS_SECTION_TITLE = @"MedicationsSupplementsSectionKey";
static NSString *const BETA_BLOCKER_KEY = @"BetaBlockerKey";
static NSString *const TAKEN_DAY_OF_KEY = @"TakenDayOfKey";
static NSString *const MEDS_SUPPLEMENTS_KEY = @"MedsSupplementsKey";
static NSString *const NOTES_KEY = @"NotesKey";

- (void)viewDidLoad
{
	 [super viewDidLoad];
	 self.medsSupplementsTableAdapter = [[FormElementTableAdapter alloc] init];
	 self.medsSupplementsTable.dataSource = self.medsSupplementsTableAdapter;
	 self.medsSupplementsTable.delegate = self.medsSupplementsTableAdapter;

	 if (_section) {
		 [self validateSection:_section];
		 NSArray *elements = [_section.elements array];

		 for (FormElement *element in elements) {
			 if ([element.key isEqualToString:BETA_BLOCKER_KEY]){
				 [self.betaBlockerBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:TAKEN_DAY_OF_KEY]){
				 [self.takenDayOfBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:MEDS_SUPPLEMENTS_KEY]){
				 self.medsSupplementsTableAdapter.items = [[((ElementListFormElement*)element).elements allObjects] mutableCopy];
				 [self.medsSupplementsTable reloadData];
			 }
			 if ([element.key isEqualToString:NOTES_KEY]){
				 [self.notesUITextView setText:((TextElement*)element).value];
			 }
		 }
	 }
}


-(void)addDatePicker: (UITextField*)textField withSelector: (SEL)selector {
	 UIDatePicker *datePicker = [[UIDatePicker alloc] init];
	 datePicker.datePickerMode = UIDatePickerModeDate;
	 [textField setInputView:datePicker];
	 UIToolbar *myToolbar = [[UIToolbar alloc] initWithFrame: CGRectMake(0,0,340,44)];
	 UIBarButtonItem *doneButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:selector];
	 [myToolbar setItems:[NSArray arrayWithObject: doneButton] animated:NO];
	 textField.inputAccessoryView = myToolbar;
}

-(void)validateSection:(FormSection*)section
{
	 NSAssert([section getElementForKey:BETA_BLOCKER_KEY]!= nil, @"BetaBlocker is nil");
	 NSAssert([section getElementForKey:TAKEN_DAY_OF_KEY]!= nil, @"TakenDayOf is nil");
	 NSAssert([section getElementForKey:MEDS_SUPPLEMENTS_KEY]!= nil, @"MedsSupplements is nil");
	 NSAssert([section getElementForKey:NOTES_KEY]!= nil, @"Notes is nil");
	 
}

-(BOOL)validateData:(NSString**)errMsg
{
	 if( self.takenDayOfBBCheckBox.selected ){ 
		 if( !(self.betaBlockerBBCheckBox.selected) ){ 
			 *errMsg = @"BetaBlocker must be selected when TakenDayOf is selected"; 
			 return false; 
		 }
	 }
	 return true; 
}

- (IBAction)accept:(id)sender {
	 NSString* errMsg;
	 if ( ! [self validateData: &errMsg] ){
		 [BBUtil showAlertWithMessage:errMsg];
		 return;
	 }
	 if ( !self.section ){
		 self.section = (FormSection*)[BBUtil newCoreDataObjectForEntityName:@"FormSection"];
		 self.section.title = MEDICATIONS_SUPPLEMENTS_SECTION_TITLE;
	 }
	 
	 BooleanFormElement *betaBlocker = (BooleanFormElement*)[_section getElementForKey:BETA_BLOCKER_KEY];
	 if (!betaBlocker) {
		 betaBlocker = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 betaBlocker.key = BETA_BLOCKER_KEY;
		 [_section addElementsObject:betaBlocker];
	 }

	 betaBlocker.value = [NSNumber numberWithBool:self.betaBlockerBBCheckBox.isSelected];
	 
	 BooleanFormElement *takenDayOf = (BooleanFormElement*)[_section getElementForKey:TAKEN_DAY_OF_KEY];
	 if (!takenDayOf) {
		 takenDayOf = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 takenDayOf.key = TAKEN_DAY_OF_KEY;
		 [_section addElementsObject:takenDayOf];
	 }

	 takenDayOf.value = [NSNumber numberWithBool:self.takenDayOfBBCheckBox.isSelected];
	 
	 ElementListFormElement *medsSupplements = (ElementListFormElement*)[_section getElementForKey:MEDS_SUPPLEMENTS_KEY];
	 if (!medsSupplements) {
		 medsSupplements = (ElementListFormElement*)[BBUtil newCoreDataObjectForEntityName:@"ElementListFormElement"];
		 medsSupplements.key = MEDS_SUPPLEMENTS_KEY;
		 [_section addElementsObject:medsSupplements];
	 }

	 NSMutableSet *medsSupplementsElementListArray = [[NSMutableSet alloc] init];
	 for (int i = 0; i < [self.medsSupplementsTable numberOfRowsInSection:0]; i++){
		 UITableViewCell *cell = [self.medsSupplementsTable cellForRowAtIndexPath:[NSIndexPath indexPathForRow:i inSection:0]];
		 MedicationFormElement *elementListFormElement = [FormElementTableCellFactory getElementForMedicationCell:cell withElement:nil];		 [medsSupplementsElementListArray addObject:elementListFormElement];
	 }
	 for (FormElement *element in medsSupplements.elements) {
		 [BBUtil deleteManagedObject:element];
	 }
	 [[medsSupplements mutableSetValueForKey:@"elements"] removeAllObjects];
	 [medsSupplements addElements:medsSupplementsElementListArray];
	 
	 TextElement *notes = (TextElement*)[_section getElementForKey:NOTES_KEY];
	 if (!notes) {
		 notes = (TextElement*)[BBUtil newCoreDataObjectForEntityName:@"TextElement"];
		 notes.key = NOTES_KEY;
		 [_section addElementsObject:notes];
	 }

	 notes.value = self.notesUITextView.text;
	 
	 [self.delegate sectionCreated:self.section];
	 [self dismissViewControllerAnimated:YES completion:nil];
}

- (IBAction)changeMedUnit:(UIButton*)sender {
	 if ([sender.titleLabel.text isEqualToString: @"cc"]) { 
		 sender.titleLabel.text = @"mcg";
	 } else if ([sender.titleLabel.text isEqualToString: @"mcg"]) {
		 sender.titleLabel.text = @"mg";
	 } else if ([sender.titleLabel.text isEqualToString: @"mg"]) {
		 sender.titleLabel.text = @"g";
	 } else if ([sender.titleLabel.text isEqualToString: @"g"]) {
		 sender.titleLabel.text = @"cc";
	 } 
}

- (IBAction)addMedsSupplements:(id)sender {
	 MedicationFormElement *formElement = (MedicationFormElement*)[BBUtil newCoreDataObjectForEntityName:@"MedicationFormElement"];
	 formElement.name = self.medsSupplementsNameTextField.text;
	 formElement.dose = self.medsSupplementsDoseTextField.text;
	 formElement.doseUnit = self.medsSupplementsDoseUnitButton.titleLabel.text;
	 [self.medsSupplementsTableAdapter.items addObject:formElement];
	 [self.medsSupplementsTable reloadData];
	 self.medsSupplementsNameTextField.text = @"";
	 self.medsSupplementsDoseTextField.text = @"";
	 [self.medsSupplementsNameTextField resignFirstResponder];
	 [self.medsSupplementsDoseTextField resignFirstResponder];
}

- (BOOL)disablesAutomaticKeyboardDismissal {
	 return NO;
}

- (IBAction)dismiss:(id)sender {
	 [BBUtil refreshManagedObject:_section];
	 [self dismissViewControllerAnimated:YES completion:nil];
}

+(NSString*)sectionTitle
{
	 return MEDICATIONS_SUPPLEMENTS_SECTION_TITLE;
}
-(void)radioGroup1:(BBCheckBox*)sender {
	 BOOL selected = sender.selected;
	 sender.selected = selected;
}
@end