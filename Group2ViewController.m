/*This file is generated by perlxml.pl. DO NOT MODIFY */

#import "Group2ViewController.h"
#import "BBUtil.h"
#import "FormSection.h"
#import "FormElement.h"
#import "BBCheckBox.h"
#import "BooleanFormElement.h"
#import "StringListElement.h"
#import "TextElement.h"
#import "StringArrayTableAdapter.h"

#import "ElementListFormElement.h"

#import "FormElementTableAdapter.h"

#import "FormElementTableCellFactory.h"

#import "AntibioticFormElement.h"

#import "MedicationFormElement.h"


@interface Group2ViewController () <UITextFieldDelegate>
@property (weak, nonatomic) IBOutlet BBCheckBox *unrecognizedBpChangeBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *laryngospasmBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *reIntubationBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *dentalTraumaBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *respiratoryArrestBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *pulmonaryEdemaBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *aspirationPneumonillsBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *pneumothoraxBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *strokeBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *peripheralNsInjuryBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *visualLossBBCheckBox;
@property (weak, nonatomic) IBOutlet BBCheckBox *ocularInjuryBBCheckBox;
@end

@implementation Group2ViewController
NSString *const GROUP2_SECTION_TITLE = @"Group2SectionKey";
static NSString *const UNRECOGNIZED_BP_CHANGE_KEY = @"UnrecognizedBpChangeKey";
static NSString *const LARYNGOSPASM_KEY = @"LaryngospasmKey";
static NSString *const RE_INTUBATION_KEY = @"ReIntubationKey";
static NSString *const DENTAL_TRAUMA_KEY = @"DentalTraumaKey";
static NSString *const RESPIRATORY_ARREST_KEY = @"RespiratoryArrestKey";
static NSString *const PULMONARY_EDEMA_KEY = @"PulmonaryEdemaKey";
static NSString *const ASPIRATION_PNEUMONILLS_KEY = @"AspirationPneumonillsKey";
static NSString *const PNEUMOTHORAX_KEY = @"PneumothoraxKey";
static NSString *const STROKE_KEY = @"StrokeKey";
static NSString *const PERIPHERAL_NS_INJURY_KEY = @"PeripheralNsInjuryKey";
static NSString *const VISUAL_LOSS_KEY = @"VisualLossKey";
static NSString *const OCULAR_INJURY_KEY = @"OcularInjuryKey";

- (void)viewDidLoad
{
	 [super viewDidLoad];
	 if (_section) {
		 [self validateSection:_section];
		 NSArray *elements = [_section.elements array];

		 for (FormElement *element in elements) {
			 if ([element.key isEqualToString:UNRECOGNIZED_BP_CHANGE_KEY]){
				 [self.unrecognizedBpChangeBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:LARYNGOSPASM_KEY]){
				 [self.laryngospasmBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:RE_INTUBATION_KEY]){
				 [self.reIntubationBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:DENTAL_TRAUMA_KEY]){
				 [self.dentalTraumaBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:RESPIRATORY_ARREST_KEY]){
				 [self.respiratoryArrestBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:PULMONARY_EDEMA_KEY]){
				 [self.pulmonaryEdemaBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:ASPIRATION_PNEUMONILLS_KEY]){
				 [self.aspirationPneumonillsBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:PNEUMOTHORAX_KEY]){
				 [self.pneumothoraxBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:STROKE_KEY]){
				 [self.strokeBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:PERIPHERAL_NS_INJURY_KEY]){
				 [self.peripheralNsInjuryBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:VISUAL_LOSS_KEY]){
				 [self.visualLossBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
			 if ([element.key isEqualToString:OCULAR_INJURY_KEY]){
				 [self.ocularInjuryBBCheckBox setSelected:[((BooleanFormElement*)element).value boolValue]];
			 }
		 }
	 }
}


-(void)addDatePicker: (UITextField*)textField withSelector: (SEL)selector {
	 UIDatePicker *datePicker = [[UIDatePicker alloc] init];
	 datePicker.datePickerMode = UIDatePickerModeDate;
	 [textField setInputView:datePicker];
	 UIToolbar *myToolbar = [[UIToolbar alloc] initWithFrame: CGRectMake(0,0,340,44)];
	 UIBarButtonItem *doneButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:selector];
	 [myToolbar setItems:[NSArray arrayWithObject: doneButton] animated:NO];
	 textField.inputAccessoryView = myToolbar;
}

-(void)validateSection:(FormSection*)section
{
	 NSAssert([section getElementForKey:UNRECOGNIZED_BP_CHANGE_KEY]!= nil, @"UnrecognizedBpChange is nil");
	 NSAssert([section getElementForKey:LARYNGOSPASM_KEY]!= nil, @"Laryngospasm is nil");
	 NSAssert([section getElementForKey:RE_INTUBATION_KEY]!= nil, @"ReIntubation is nil");
	 NSAssert([section getElementForKey:DENTAL_TRAUMA_KEY]!= nil, @"DentalTrauma is nil");
	 NSAssert([section getElementForKey:RESPIRATORY_ARREST_KEY]!= nil, @"RespiratoryArrest is nil");
	 NSAssert([section getElementForKey:PULMONARY_EDEMA_KEY]!= nil, @"PulmonaryEdema is nil");
	 NSAssert([section getElementForKey:ASPIRATION_PNEUMONILLS_KEY]!= nil, @"AspirationPneumonills is nil");
	 NSAssert([section getElementForKey:PNEUMOTHORAX_KEY]!= nil, @"Pneumothorax is nil");
	 NSAssert([section getElementForKey:STROKE_KEY]!= nil, @"Stroke is nil");
	 NSAssert([section getElementForKey:PERIPHERAL_NS_INJURY_KEY]!= nil, @"PeripheralNsInjury is nil");
	 NSAssert([section getElementForKey:VISUAL_LOSS_KEY]!= nil, @"VisualLoss is nil");
	 NSAssert([section getElementForKey:OCULAR_INJURY_KEY]!= nil, @"OcularInjury is nil");
	 
}

-(BOOL)validateData:(NSString**)errMsg
{
	 return true; 
}

- (IBAction)accept:(id)sender {
	 NSString* errMsg;
	 if ( ! [self validateData: &errMsg] ){
		 [BBUtil showAlertWithMessage:errMsg];
		 return;
	 }
	 if ( !self.section ){
		 self.section = (FormSection*)[BBUtil newCoreDataObjectForEntityName:@"FormSection"];
		 self.section.title = GROUP2_SECTION_TITLE;
	 }
	 
	 BooleanFormElement *unrecognizedBpChange = (BooleanFormElement*)[_section getElementForKey:UNRECOGNIZED_BP_CHANGE_KEY];
	 if (!unrecognizedBpChange) {
		 unrecognizedBpChange = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 unrecognizedBpChange.key = UNRECOGNIZED_BP_CHANGE_KEY;
		 [_section addElementsObject:unrecognizedBpChange];
	 }

	 unrecognizedBpChange.value = [NSNumber numberWithBool:self.unrecognizedBpChangeBBCheckBox.isSelected];
	 
	 BooleanFormElement *laryngospasm = (BooleanFormElement*)[_section getElementForKey:LARYNGOSPASM_KEY];
	 if (!laryngospasm) {
		 laryngospasm = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 laryngospasm.key = LARYNGOSPASM_KEY;
		 [_section addElementsObject:laryngospasm];
	 }

	 laryngospasm.value = [NSNumber numberWithBool:self.laryngospasmBBCheckBox.isSelected];
	 
	 BooleanFormElement *reIntubation = (BooleanFormElement*)[_section getElementForKey:RE_INTUBATION_KEY];
	 if (!reIntubation) {
		 reIntubation = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 reIntubation.key = RE_INTUBATION_KEY;
		 [_section addElementsObject:reIntubation];
	 }

	 reIntubation.value = [NSNumber numberWithBool:self.reIntubationBBCheckBox.isSelected];
	 
	 BooleanFormElement *dentalTrauma = (BooleanFormElement*)[_section getElementForKey:DENTAL_TRAUMA_KEY];
	 if (!dentalTrauma) {
		 dentalTrauma = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 dentalTrauma.key = DENTAL_TRAUMA_KEY;
		 [_section addElementsObject:dentalTrauma];
	 }

	 dentalTrauma.value = [NSNumber numberWithBool:self.dentalTraumaBBCheckBox.isSelected];
	 
	 BooleanFormElement *respiratoryArrest = (BooleanFormElement*)[_section getElementForKey:RESPIRATORY_ARREST_KEY];
	 if (!respiratoryArrest) {
		 respiratoryArrest = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 respiratoryArrest.key = RESPIRATORY_ARREST_KEY;
		 [_section addElementsObject:respiratoryArrest];
	 }

	 respiratoryArrest.value = [NSNumber numberWithBool:self.respiratoryArrestBBCheckBox.isSelected];
	 
	 BooleanFormElement *pulmonaryEdema = (BooleanFormElement*)[_section getElementForKey:PULMONARY_EDEMA_KEY];
	 if (!pulmonaryEdema) {
		 pulmonaryEdema = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 pulmonaryEdema.key = PULMONARY_EDEMA_KEY;
		 [_section addElementsObject:pulmonaryEdema];
	 }

	 pulmonaryEdema.value = [NSNumber numberWithBool:self.pulmonaryEdemaBBCheckBox.isSelected];
	 
	 BooleanFormElement *aspirationPneumonills = (BooleanFormElement*)[_section getElementForKey:ASPIRATION_PNEUMONILLS_KEY];
	 if (!aspirationPneumonills) {
		 aspirationPneumonills = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 aspirationPneumonills.key = ASPIRATION_PNEUMONILLS_KEY;
		 [_section addElementsObject:aspirationPneumonills];
	 }

	 aspirationPneumonills.value = [NSNumber numberWithBool:self.aspirationPneumonillsBBCheckBox.isSelected];
	 
	 BooleanFormElement *pneumothorax = (BooleanFormElement*)[_section getElementForKey:PNEUMOTHORAX_KEY];
	 if (!pneumothorax) {
		 pneumothorax = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 pneumothorax.key = PNEUMOTHORAX_KEY;
		 [_section addElementsObject:pneumothorax];
	 }

	 pneumothorax.value = [NSNumber numberWithBool:self.pneumothoraxBBCheckBox.isSelected];
	 
	 BooleanFormElement *stroke = (BooleanFormElement*)[_section getElementForKey:STROKE_KEY];
	 if (!stroke) {
		 stroke = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 stroke.key = STROKE_KEY;
		 [_section addElementsObject:stroke];
	 }

	 stroke.value = [NSNumber numberWithBool:self.strokeBBCheckBox.isSelected];
	 
	 BooleanFormElement *peripheralNsInjury = (BooleanFormElement*)[_section getElementForKey:PERIPHERAL_NS_INJURY_KEY];
	 if (!peripheralNsInjury) {
		 peripheralNsInjury = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 peripheralNsInjury.key = PERIPHERAL_NS_INJURY_KEY;
		 [_section addElementsObject:peripheralNsInjury];
	 }

	 peripheralNsInjury.value = [NSNumber numberWithBool:self.peripheralNsInjuryBBCheckBox.isSelected];
	 
	 BooleanFormElement *visualLoss = (BooleanFormElement*)[_section getElementForKey:VISUAL_LOSS_KEY];
	 if (!visualLoss) {
		 visualLoss = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 visualLoss.key = VISUAL_LOSS_KEY;
		 [_section addElementsObject:visualLoss];
	 }

	 visualLoss.value = [NSNumber numberWithBool:self.visualLossBBCheckBox.isSelected];
	 
	 BooleanFormElement *ocularInjury = (BooleanFormElement*)[_section getElementForKey:OCULAR_INJURY_KEY];
	 if (!ocularInjury) {
		 ocularInjury = (BooleanFormElement*)[BBUtil newCoreDataObjectForEntityName:@"BooleanFormElement"];
		 ocularInjury.key = OCULAR_INJURY_KEY;
		 [_section addElementsObject:ocularInjury];
	 }

	 ocularInjury.value = [NSNumber numberWithBool:self.ocularInjuryBBCheckBox.isSelected];
	 
	 [self.delegate sectionCreated:self.section];
	 [self dismissViewControllerAnimated:YES completion:nil];
}

- (IBAction)changeMedUnit:(UIButton*)sender {
	 if ([sender.titleLabel.text isEqualToString: @"cc"]) { 
		 sender.titleLabel.text = @"mcg";
	 } else if ([sender.titleLabel.text isEqualToString: @"mcg"]) {
		 sender.titleLabel.text = @"mg";
	 } else if ([sender.titleLabel.text isEqualToString: @"mg"]) {
		 sender.titleLabel.text = @"g";
	 } else if ([sender.titleLabel.text isEqualToString: @"g"]) {
		 sender.titleLabel.text = @"cc";
	 } 
}

- (BOOL)disablesAutomaticKeyboardDismissal {
	 return NO;
}

- (IBAction)dismiss:(id)sender {
	 [BBUtil refreshManagedObject:_section];
	 [self dismissViewControllerAnimated:YES completion:nil];
}

+(NSString*)sectionTitle
{
	 return GROUP2_SECTION_TITLE;
}
-(void)radioGroup1:(BBCheckBox*)sender {
	 BOOL selected = sender.selected;
	 sender.selected = selected;
}
@end